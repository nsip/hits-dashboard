extends ./parts/layout.jade
block vars
    - page = 'Connect Java consumer';
    - area = 'Developer Help';
block main

    .main-heading
        .main-title
            ol.breadcrumb
                li
                  a(href="help.html") Developer Help
                li.active Help
        // .main-filter
            form.main-filter__search
                .input-group
                    input.form-control(type="text", placeholder="Search...")
                    span.input-group-btn
                        button.btn.btn-default(type="button")
                            .fa.fa-search
    .container-fluid.half-padding
        .pages.pages_dashboard
        .template
            .row
                .col-md-12
                    .container-fluid.half-padding
                        .row
                            .col-md-12
                                .panel.panel-info
                                    .panel-heading
                                        h3.panel-title Connect SIF3 Java Framework Consumers to HITS
                                    .panel-body
                                        h3 HITS environment
                                        p To be able to connect your consumer to HITS you must obtain an account on HITS. Apply on the#{' '}
                                            a(href="http://hits.nsip.edu.au/dashboard/") Welcome page
                                            |#{' '}for an account.
                                        p Once you have an account, please use your account URL to get to the Welcome page. From the menu on the right select “Developer Tools-&gt;Databases” to get your available sandbox databases.
                                        p Either you create a new database or you use one that has been created previously. In the lower part of that page you will see something like this:
                                        h4 Figure 1: SIF3 HITS Database View
                                        img(src="img/figure1.png")
                                        p Select one of the exiting databases and you will get the details page of that database with the SIF Environment information. The second part of that page looks like this:
                                        h4 Figure 2: SIF3 HITS Environment Page
                                        img(src="img/figure2.png")
                                        h3 Configure SIF3 Java Framework
                                        p To configure the SIF3 Java Framework to connect to the HITS environment listed in previous section you need to do the following steps:
                                        h4 Step 1: Set Solution ID in Environment Template
                                        p In your framework you should have a directory where the consumer’s SIF3Environment templates are stored. This would generally be at the following location &lt;installDIR&gt;/src/test/resources/config/environments/consumer/template. There is most likely an environment template called HITS.xml, demo.xml or devLocal.xml. If the HITS.xml doesn’t exist follow the steps below:
                                        ol
                                            li Create a copy of one of these templates in the same directory and name it something like HITS.xml
                                            li Open the newly created HITS.xml file and put the value of the “SIFsolutionId” as seen from Figure 1 into the &lt;solutionId&gt; node.
                                                p Your HITS.xml file should look something like this:
                                                pre.
                                                    &lt;environment xmlns="http://www.sifassociation.org/infrastructure/3.1"&gt;
                                                    &nbsp;&lt;solutionId&gt;HITS&lt;/solutionId&gt;
                                                    &nbsp;&lt;authenticationMethod&gt;Basic&lt;/authenticationMethod&gt;
                                                    &nbsp;&lt;instanceId/&gt;
                                                    &nbsp;&lt;userToken/&gt;
                                                    &nbsp;&lt;consumerName&gt;&lt;/consumerName&gt;
                                                    &nbsp;&lt;applicationInfo&gt;
                                                    &nbsp;&nbsp;&lt;applicationKey&gt;&lt;/applicationKey&gt;
                                                    &nbsp;&nbsp;&lt;supportedInfrastructureVersion&gt;3.1&lt;/supportedInfrastructureVersion&gt;
                                                    &nbsp;&lt;dataModelNamespace&gt;http://www.sifassociation.org/au/datamodel/3.4&lt;/dataModelNamespace&gt;
                                                    &nbsp;&nbsp;&lt;transport&gt;REST&lt;/transport&gt;
                                                    &nbsp;&nbsp;&lt;applicationProduct&gt;
                                                    &nbsp;&nbsp;&nbsp;&lt;vendorName&gt;Systemic Pty Ltd&lt;/vendorName&gt;
                                                    &nbsp;&nbsp;&nbsp;&lt;productName&gt;Test Driver&lt;/productName&gt;
                                                    &nbsp;&nbsp;&nbsp;&lt;productVersion&gt;0.1alpha&lt;/productVersion&gt;
                                                    &nbsp;&nbsp;&lt;/applicationProduct&gt;
                                                    &nbsp;&lt;/applicationInfo&gt;
                                                    &lt;/environment&gt;
                                                p You can change the values under the
                                                    em applicationProduct
                                                    | node to any value that is applicable to you. Leave everything else as is.
                                            li Save your HITS.xml file.
                                        h4 Step 2: Configure the consumer’s properties file
                                        p The consumer’s property file can be found in the directory &lt;installDIR&gt;/config/consumers. Let’s assume you have a properties file called StudentConsumer.properties. You need to set a few properties in that properties file with the values from Figure 2. Below is the name of each property and what it must be set to:
                                        ul
                                            li
                                                strong env.xml.file.name
                                                br
                                                | Name of xml file created in Step 2 (i.e. HITS.xml)
                                            li
                                                strong env.application.key
                                                br
                                                | Value of “Application Key” from Figure 2
                                            li
                                                strong env.pwd
                                                br
                                                | Value of “Password” from Figure 2
                                            li
                                                strong env.userToken
                                                br
                                                | Value of “User Token” from Figure 2
                                            li
                                                strong env.baseURI
                                                br
                                                | Value of “Create Environment URL” from Figure 2
                                            li
                                                strong env.authentication.method
                                                br
                                                | Basic
                                            li
                                                strong env.create.conflictIsError\*
                                                br
                                                | false
                                        p If the “Session Token” and “Environment URL” from Figure 2 are set then a SIF Environment is already created and you want your consumer to connect to this existing environment. In this case you need to set the following additional properties in the StudentConsumer.properties file:
                                        ul
                                            li
                                                strong env.use.existing
                                                br
                                                | true
                                            li
                                                strong env.existing.sessionToken
                                                br
                                                | Value of “Session Token” from Figure 2
                                            li
                                                strong env.existing.environmentURI
                                                br
                                                | Value of “Environment URL” from Figure 2
                                        h4 Step 3: Start your Consumer
                                        p After you have applied the configurations in the previous two steps you should be able to start your consumer. Please ensure that your consumer uses the correct properties file (the one you changed in step 2 above). Verify this by looking at the consumer executable and ensure that the ConsumerLoader is initialised with the correct property file (example below):
                                        p ConsumerLoader.initialise("
                                            em StudentConsumer
                                            | ");
                                        p Note: You MUST NOT provide the “.properties” file extension!
block css
block js
    if !release
        script(src='js/template/index.js')
